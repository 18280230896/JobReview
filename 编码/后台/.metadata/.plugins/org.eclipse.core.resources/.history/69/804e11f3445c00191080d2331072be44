package test;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.lang.reflect.Method;

import javax.tools.DiagnosticCollector;
import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;

import com.llg.util.MyClassLoad;


public class Test {
	public static void main(String[] args) {
		File[] files = new File[]{new File("C:\\Users\\asus\\Desktop\\新建文件夹 (2)\\Test.java")};
		JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
		StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);
		Iterable<? extends JavaFileObject> javaFileObjects = fileManager.getJavaFileObjects(files);
		DiagnosticCollector diagnostics = new DiagnosticCollector();
		boolean success = compiler.getTask(null, fileManager, diagnostics, null, null, javaFileObjects).call();
		if(!success){
			System.out.println(diagnostics.getDiagnostics());
			return;
		}
		PrintStream out = System.out;
		PrintStream err = System.err;
		ByteArrayOutputStream bos = new ByteArrayOutputStream();
		PrintStream exePrintStream = new PrintStream(bos, true);
		System.setOut(exePrintStream);
		System.setErr(exePrintStream);
		try {
			//String className = parseClassName(getFileContent(new File("C:\\Users\\asus\\Desktop\\新建文件夹 (2)\\Test.java")));
			//Class c = Class.forName(className,true, new MyClassLoad());
			//Method main = c.getMethod("main", String[].class);
			//main.invoke(null, (Object)null);
		} catch (Exception e) {
			e.printStackTrace();
		}finally {
			exePrintStream.close();
			System.setOut(out);
			System.setErr(err);
		}
		System.out.println(new String(bos.toByteArray()));
	}
	
	
	
	

}
